"0","reticulate::repl_python()"
"0","from exps import *"
"0","import numpy"
"0","import matplotlib.pyplot as plt"
"0",""
"0","def make_params(shrink_factor):"
"0","    return dict("
"0","        # graph params"
"0","        n = 1000,"
"0","        p1 = 0.01 / 2,"
"0","        p2 = 0.01 / 2,"
"0","        p_inter = 0.0001 / 2,"
"0","        # seeding params"
"0","        seed1 = 0.3,"
"0","        seed2 = 0.3,"
"0","        # IC params"
"0","        alpha = 0.1,"
"0","        reprs = 100)"
"0","    "
"0","def run_experiment_range(factors, f):"
"0","    c1s = []"
"0","    c2s = []"
"0","    for factor in factors:"
"0","        params = make_params(factor)"
"0","        n1 = int(params[""n""] * (1 - factor))"
"0","        n2 = int(params[""n""] * (1 - 0.1))"
"0","        params[""n1""] = n1"
"0","        params[""n2""] = n2"
"0","        params[""communities""] = [list(range(0, n1)), list(range(n1, n1 + n2))]"
"0","        params[""graph""] = two_communities(params)"
"0","        params[""seeds""] = set_seeds(params)"
"0","        ic_result = run_experiment(params)"
"0","        ic_result = f(ic_result, params)"
"0","        c1, c2 = split_result_by_communities(ic_result, params)"
"0","        c1s.append(numpy.mean(c1))"
"0","        c2s.append(numpy.mean(c2))"
"0","    return c1s, c2s"
"0","    "
"0","factors = [0.1, 0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9]"
"0","def plot_curve(f, label):"
"0","    c1s, c2s = run_experiment_range(factors, f)"
"0","    plt.figure()"
"0","    plt.plot(factors, c1s)"
"0","    plt.plot(factors, c2s)"
"0","    plt.xlabel(""Shrinkage factor"")"
"0","    plt.ylabel(label)"
"0","    plt.show()"
"0","    "
"0",""
