"0","import os"
"0","import random"
"0",""
"0","def configure_experiment_1_and_2(factors, graphs):"
"0","    conf = configure_experiment_1(factors, graphs)"
"0","    r = run_experiment_batch(conf)"
"0","    "
"0","    result = {}"
"0","    params = dict("
"0","        n = 1000,"
"0","        n1 = 1000,"
"0","        n2 = 1000)"
"0","    for f in factors:"
"0","        for g in graphs:"
"0","            # n = read_graph(g)"
"0","            params[""seed1""] = 0.3"
"0","            params[""seed2""] = 0.3"
"0","            "
"0","            nodes_to_delete = set()"
"0","            total_nodes = params[""n1""] + params[""n2""]"
"0","            ic_result = r[(f, g)][""ic_result""]"
"0","            for node in range(total_nodes):"
"0","                if random.random() < ic_result[node]:"
"0","                    nodes_to_delete.add(node)"
"0","            "
"0","            params[""nodes_to_delete""] = nodes_to_delete"
"0","            network = delete_nodes_from_network(g, nodes_to_delete)"
"0","            params[""graph""] = network"
"0","            params[""seeds""] = set_seeds(params)"
"0","            params[""factor""] = f"
"0","            params[""graph_name""] = g"
"0","            params[""alpha""] = 0.1"
"0","            params[""reprs""] = n_reps"
"0","            params[""communities""] = [list(range(0, 1000)), list(range(1000, 2000))]"
"0","            result[(f, g)] = copy.copy(params)"
"0","    return result"
"0",""
