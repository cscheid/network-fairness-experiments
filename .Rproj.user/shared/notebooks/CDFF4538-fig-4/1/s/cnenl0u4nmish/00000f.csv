"0","import os"
"0",""
"0","def delete_nodes_from_network(network, nodes_to_delete):"
"0","    network = read_graph(network)"
"0","    edge_list = graph_to_edge_list(network)"
"0","    for n in nodes_to_delete:"
"0","        network[n] = []"
"0","    network = list(list(e for e in l if e not in nodes_to_delete)"
"0","        for l in network)"
"0","    n = temp_name("".txt"")"
"0","    write_graph(network, n)"
"0","    return n"
"0","    "
"0","def configure_experiment_2(factors, graphs):"
"0","    result = {}"
"0","    params = dict("
"0","        n = 1000,"
"0","        n1 = 1000,"
"0","        n2 = 1000)"
"0","    for f in factors:"
"0","        for g in graphs:"
"0","            # n = read_graph(g)"
"0","            params[""seed1""] = 0.1"
"0","            params[""seed2""] = 0.1"
"0","            nodes_to_delete = set(set_seeds(dict("
"0","                n1 = 1000,"
"0","                n2 = 1000,"
"0","                seed1 = 0.1,"
"0","                seed2 = 0.1 * f)))"
"0","            params[""nodes_to_delete""] = nodes_to_delete"
"0","            network = delete_nodes_from_network(g, nodes_to_delete)"
"0","            params[""graph""] = network"
"0","            params[""seeds""] = set_seeds(params)"
"0","            params[""factor""] = f"
"0","            params[""graph_name""] = g"
"0","            params[""alpha""] = 0.1"
"0","            params[""reprs""] = n_reps"
"0","            params[""communities""] = [list(range(0, 1000)), list(range(1000, 2000))]"
"0","            result[(f, g)] = copy.copy(params)"
"0","    return result"
"0",""
